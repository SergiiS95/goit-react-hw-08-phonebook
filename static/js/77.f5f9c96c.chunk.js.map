{"version":3,"file":"static/js/77.f5f9c96c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage.module.css?7675","components/Loader/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"addContactBtn\":\"ContactForm_addContactBtn__3KI6e\"};","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContactThunk } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmite = e => {\n    e.preventDefault();\n\n    const isExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(\n      addContactThunk({\n        name,\n        number,\n      })\n    );\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmite} className={css.form}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInput}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInput}\n        />\n      </label>\n      <button type=\"submit\" className={css.addContactBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\",\"contactText\":\"ContactList_contactText__mBjoQ\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={css.contactItem}>\n          <p className={css.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button\n            className={css.contactListBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContactThunk(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BubeA\",\"title\":\"ContactsPage_title__X03js\",\"titleContact\":\"ContactsPage_titleContact__x2D6O\"};","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"#3f51b5\"\n      innerCircleColor=\"#3f51b5\"\n      middleCircleColor=\"#3f51b5\"\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsThunk } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport css from './ContactsPage.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.titleContact}>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader/>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInput","e","target","value","onSubmit","preventDefault","some","contact","toLowerCase","alert","addContactThunk","className","css","type","pattern","title","required","onChange","ContactList","filter","selectFilter","filteredContacts","includes","map","onClick","deleteContactThunk","id","Filter","setFilter","Loader","height","width","color","wrapperStyle","display","justifyContent","marginTop","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","isLoading","selectIsLoading","error","selectError","useEffect","fetchContactsThunk"],"sourceRoot":""}